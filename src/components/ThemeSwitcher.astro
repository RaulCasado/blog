---
---

<div class="theme-switcher">
  <button id="theme-toggle" aria-label="Cambiar tema">
    <!-- Sun icon for dark mode (shown when in dark mode) -->
    <svg xmlns="http://www.w3.org/2000/svg" id="sun-icon" class="icon sun-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <circle cx="12" cy="12" r="5"></circle>
      <line x1="12" y1="1" x2="12" y2="3"></line>
      <line x1="12" y1="21" x2="12" y2="23"></line>
      <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
      <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
      <line x1="1" y1="12" x2="3" y2="12"></line>
      <line x1="21" y1="12" x2="23" y2="12"></line>
      <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
      <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
    </svg>
    
    <!-- Moon icon for light mode (shown when in light mode) -->
    <svg xmlns="http://www.w3.org/2000/svg" id="moon-icon" class="icon moon-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
    </svg>
  </button>
</div>

<script>
  // Get saved theme from localStorage or use user preference
  const getPreferredTheme = () => {
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme) return savedTheme;
    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
  };

  // Apply theme to document
  const applyTheme = (theme) => {
    document.documentElement.classList.remove('light', 'dark');
    document.documentElement.classList.add(theme);
    
    // Update button icons visibility based on current theme
    const sunIcon = document.getElementById('sun-icon');
    const moonIcon = document.getElementById('moon-icon');
    
    if (sunIcon && moonIcon) {
      if (theme === 'dark') {
        sunIcon.style.display = 'block';
        moonIcon.style.display = 'none';
      } else {
        sunIcon.style.display = 'none';
        moonIcon.style.display = 'block';
      }
    }
  };

  // Toggle between light and dark
  const toggleTheme = () => {
    const currentTheme = document.documentElement.classList.contains('dark') ? 'dark' : 'light';
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    
    localStorage.setItem('theme', newTheme);
    applyTheme(newTheme);
  };

  // Initialize theme
  document.addEventListener('DOMContentLoaded', () => {
    // Apply initial theme
    applyTheme(getPreferredTheme());
    
    // Set up button click event
    const themeToggle = document.getElementById('theme-toggle');
    if (themeToggle) {
      themeToggle.addEventListener('click', toggleTheme);
    }
  });

  // Apply theme immediately to avoid FOUC (Flash Of Unstyled Content)
  applyTheme(getPreferredTheme());
</script>

<style>
  .theme-switcher {
    position: relative;
    z-index: 10;
    display: flex;
    align-items: center;
    margin-right: 0.5rem;
  }

  button {
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0;
    margin: 0;
    border-radius: var(--radius);
    display: flex;
    align-items: center;
    justify-content: center;
    color: currentColor;
    transition: color 0.3s ease, background-color 0.3s ease, transform 0.2s ease;
    height: 38px; /* Match LinkedIn icon height */
    width: 38px; /* Match LinkedIn icon width */
  }

  button:hover {
    color: var(--primary);
    background-color: hsl(var(--secondary) / 0.3);
    transform: translateY(-1px);
  }

  .icon {
    width: 24px;
    height: 24px;
  }

  /* Initially hide one icon - script will control which is shown */
  .sun-icon {
    display: none;
  }
</style>
