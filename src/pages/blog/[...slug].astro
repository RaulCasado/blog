---
import { defaultLanguage } from '../../../i18n/ui';

// Get browser language
const getLanguageFromBrowser = () => {
  if (Astro.request.headers.get('accept-language')) {
    const browserLang = Astro.request.headers.get('accept-language').split(',')[0].split('-')[0];
    return browserLang === 'en' ? 'en' : defaultLanguage;
  }
  return defaultLanguage;
};

const lang = getLanguageFromBrowser();
const { slug } = Astro.params;

// Try to find matching content in the preferred language
// This is simplified - in a real app, you'd need to account for whether 
// the content exists in both languages
---
<meta http-equiv="refresh" content={`0;url=/${lang}/blog/${slug}`} />
